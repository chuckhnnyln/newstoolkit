#!/usr/bin/env python3
from PIL import Image
import sys
import os
import shutil
import datetime
import multiprocessing

def split(original_path, output_path, name, extension):
    percent = 53
    ratio = 1.25
    base_name = name.replace("." + extension, "")
    if not os.path.isdir(output_path): os.makedirs(output_path)
    with Image.open(original_path + "/"+ name) as image:
        width, height = image.size
        image_ratio = width / height
        if image_ratio > ratio:
            window = round(width*percent/100)
            side1crop = [0, 0, window, height]
            side1 = image.crop(side1crop)
            side1.save(output_path + "/" + base_name + "_1." + extension)
            side2crop = [(width-window), 0, width, height]
            side2 = image.crop(side2crop)
            side2.save(output_path + "/" + base_name + "_2." + extension)
        else:
            shutil.copy2(original_path + "/"+ name, output_path + "/" + name)

if __name__ == "__main__":

    if len(sys.argv) < 3:
        print("No directory or extention specified!")
        print("2upto1up [directory] [file extenstion]")
        print("IE: 2upto1up MyFolder png")
        quit()

    begin_time = datetime.datetime.now()
    target_dir = sys.argv[1]
    extension = sys.argv[2]
    output_dir = target_dir + "_split"
    jobs = []
    count = 0
    allowed_ext = ["png", "tif", "jpg", "bmp"]

    if extension not in allowed_ext:
        print("Not a splitable file type!")
        print("Allowed extentions: png, tif, jpg")
        quit()

    for root, dirs, files in os.walk(target_dir):
        for name in files:
            if name.endswith(extension):
                output_path = root.replace(target_dir, output_dir)
                split(root, output_path, name, extension)
                count = count + 1

    elapsed = datetime.datetime.now() - begin_time
    print("Elapsed time: ",elapsed)
    print("Files processed: ", count)
    print("Time per file: ",elapsed / count)
