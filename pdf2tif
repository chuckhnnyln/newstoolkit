#!/usr/bin/env python3
# Chuck Henry 2022
# Requires Poppler and pdf2image installed, written on MacOS
# Creates a tif of each PDF file

import os
import sys
from subprocess import call
from multiprocessing.dummy import Pool as ThreadPool
from pdf2image import convert_from_path
from PIL import Image
Image.MAX_IMAGE_PIXELS = 1000000000

def OcrFile(ItemPath):
    ItemName = os.path.basename(ItemPath)
    ItemNameNoExt = os.path.splitext(ItemName)[0]
    ItemPathNoFile = os.path.dirname(ItemPath)
    #print(f'Converting {ItemName} to tif.') #Python3
    print('Converting ' + ItemName + ' to tif.') #Python2
    images = convert_from_path(ItemPath)
    if not os.path.exists(os.path.join(ItemPathNoFile,ItemNameNoExt + '.tif')):
        images[0].save(os.path.join(ItemPathNoFile,ItemNameNoExt + '.tif'),'tiff', dpi=(300, 300))

if __name__ == '__main__':

    if len(sys.argv) == 1:
        print("No directory or extension specified!")
        print("pdf2tif [directory]")
        print("IE: pdf2tif MyFolder")
        quit()

    RootDir = sys.argv[1]
    Extension = 'pdf'

    # Find target files
    FileList=[]
    for root, dirs, files in os.walk(RootDir):
        for Item in files:
            if Item.endswith(Extension):
                FileList.append(os.path.join(root,Item))
    FileList.sort()

    # Pass the file list to workers to complete
    pool = ThreadPool(6)
    pool.map(OcrFile, FileList)
    pool.close()
    pool.join()
